#ifndef KEYMAP_H
#define KEYMAP_H

#include <stdint.h>

#include "Matrix.h"


enum class Key {
  LayerSym,

  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
  Z,

  Num1,
  Num2,
  Num3,
  Num4,
  Num5,
  Num6,
  Num7,
  Num8,
  Num9,
  Num0,

  Enter,
  Esc,
  BSpace,
  Tab,
  Space,
  Minus,
  Equal,
  LBrace,
  RBrace,
  BSlash,
  Tilde,
  Semicolon,
  SQuote,
  Grave,
  Comma,
  Period,
  Slash,
  Percent,
  At,
  LBrack,
  RBrack,
  Carrot,
  Pound,
  Dollar,
  LParen,
  RParen,
  Asterisk,
  Bang,
  Plus,
  Underscore,
  Ampersand,
  Pipe,
  Question,

  F1,
  F2,
  F3,
  F4,
  F5,
  F6,
  F7,
  F8,
  F9,
  F10,
  F11,
  F12,
  PrintScr,
  ScrollLock,
  Pause,
  Home,
  PgUp,
  Del,
  End,
  PgDn,
  Right,
  Left,
  Down,
  Up,

  Ctrl,
  Shift,
  Alt,

  None
};

enum class Scancode {
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
  Z,

  Num1,
  Num2,
  Num3,
  Num4,
  Num5,
  Num6,
  Num7,
  Num8,
  Num9,
  Num0,

  Enter,
  Esc,
  BSpace,
  Tab,
  Space,
  Minus,
  Equal,
  LBrace,
  RBrace,
  BSlash,
  Tilde,
  Semicolon,
  SQuote,
  Grave,
  Comma,
  Period,
  Slash,

  F1,
  F2,
  F3,
  F4,
  F5,
  F6,
  F7,
  F8,
  F9,
  F10,
  F11,
  F12,
  Home,
  PgUp,
  Del,
  End,
  PgDn,
  Right,
  Left,
  Down,
  Up,

  Count,
  None
};

const uint8_t scancodes[] = {
  [static_cast<int>(Scancode::A)] = 0x4,
  [static_cast<int>(Scancode::B)] = 0x5,
  [static_cast<int>(Scancode::C)] = 0x6,
  [static_cast<int>(Scancode::D)] = 0x7,
  [static_cast<int>(Scancode::E)] = 0x8,
  [static_cast<int>(Scancode::F)] = 0x9,
  [static_cast<int>(Scancode::G)] = 0xa,
  [static_cast<int>(Scancode::H)] = 0xb,
  [static_cast<int>(Scancode::I)] = 0xc,
  [static_cast<int>(Scancode::J)] = 0xd,
  [static_cast<int>(Scancode::K)] = 0xe,
  [static_cast<int>(Scancode::L)] = 0xf,
  [static_cast<int>(Scancode::M)] = 0x10,
  [static_cast<int>(Scancode::N)] = 0x11,
  [static_cast<int>(Scancode::O)] = 0x12,
  [static_cast<int>(Scancode::P)] = 0x13,
  [static_cast<int>(Scancode::Q)] = 0x14,
  [static_cast<int>(Scancode::R)] = 0x15,
  [static_cast<int>(Scancode::S)] = 0x16,
  [static_cast<int>(Scancode::T)] = 0x17,
  [static_cast<int>(Scancode::U)] = 0x18,
  [static_cast<int>(Scancode::V)] = 0x19,
  [static_cast<int>(Scancode::W)] = 0x1a,
  [static_cast<int>(Scancode::X)] = 0x1b,
  [static_cast<int>(Scancode::Y)] = 0x1c,
  [static_cast<int>(Scancode::Z)] = 0x1d,

  [static_cast<int>(Scancode::Num1)] = 0x1e,
  [static_cast<int>(Scancode::Num2)] = 0x1f,
  [static_cast<int>(Scancode::Num3)] = 0x20,
  [static_cast<int>(Scancode::Num4)] = 0x21,
  [static_cast<int>(Scancode::Num5)] = 0x22,
  [static_cast<int>(Scancode::Num6)] = 0x23,
  [static_cast<int>(Scancode::Num7)] = 0x24,
  [static_cast<int>(Scancode::Num8)] = 0x25,
  [static_cast<int>(Scancode::Num9)] = 0x26,
  [static_cast<int>(Scancode::Num0)] = 0x27,

  [static_cast<int>(Scancode::Enter)] = 0x28,
  [static_cast<int>(Scancode::Esc)] = 0x29,
  [static_cast<int>(Scancode::BSpace)] = 0x2a,
  [static_cast<int>(Scancode::Tab)] = 0x2b,
  [static_cast<int>(Scancode::Space)] = 0x2c,
  [static_cast<int>(Scancode::Minus)] = 0x2d,
  [static_cast<int>(Scancode::Equal)] = 0x2e,
  [static_cast<int>(Scancode::LBrace)] = 0x2f,
  [static_cast<int>(Scancode::RBrace)] = 0x30,
  [static_cast<int>(Scancode::BSlash)] = 0x31,
  [static_cast<int>(Scancode::Tilde)] = 0x32,
  [static_cast<int>(Scancode::Semicolon)] = 0x33,
  [static_cast<int>(Scancode::SQuote)] = 0x34,
  [static_cast<int>(Scancode::Grave)] = 0x35,
  [static_cast<int>(Scancode::Comma)] = 0x36,
  [static_cast<int>(Scancode::Period)] = 0x37,
  [static_cast<int>(Scancode::Slash)] = 0x38,

  [static_cast<int>(Scancode::F1)] = 0x3a,
  [static_cast<int>(Scancode::F2)] = 0x3b,
  [static_cast<int>(Scancode::F3)] = 0x3c,
  [static_cast<int>(Scancode::F4)] = 0x3d,
  [static_cast<int>(Scancode::F5)] = 0x3e,
  [static_cast<int>(Scancode::F6)] = 0x3f,
  [static_cast<int>(Scancode::F7)] = 0x40,
  [static_cast<int>(Scancode::F8)] = 0x41,
  [static_cast<int>(Scancode::F9)] = 0x42,
  [static_cast<int>(Scancode::F10)] = 0x43,
  [static_cast<int>(Scancode::F11)] = 0x44,
  [static_cast<int>(Scancode::F12)] = 0x45,
  [static_cast<int>(Scancode::Home)] = 0x4a,
  [static_cast<int>(Scancode::PgUp)] = 0x4b,
  [static_cast<int>(Scancode::Del)] = 0x4c,
  [static_cast<int>(Scancode::End)] = 0x4d,
  [static_cast<int>(Scancode::PgDn)] = 0x4e,
  [static_cast<int>(Scancode::PgUp)] = 0x4f,
  [static_cast<int>(Scancode::Left)] = 0x50,
  [static_cast<int>(Scancode::Down)] = 0x51,
  [static_cast<int>(Scancode::Up)] = 0x52
};

enum modifier {
  MODIFIER_CTRL,
  MODIFIER_SHIFT,
  MODIFIER_ALT,

  MODIFIER_COUNT,
  MODIFIER_NONE
};

const uint8_t modifiers[] = {
  [MODIFIER_CTRL] = 1 << 0,
  [MODIFIER_SHIFT] = 1 << 1,
  [MODIFIER_ALT] = 1 << 2
};

struct key_scancode {
  enum class Scancode scancode : 7;
  enum modifier modifier : 2;
};

const struct key_scancode key_scancode_map = {
  [static_cast<int>(Key::LayerSym] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },

  [static_cast<int>(Key::A)] = { .scancode = Scancode::A, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::B)] = { .scancode = Scancode::B, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::C)] = { .scancode = Scancode::C, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::D)] = { .scancode = Scancode::D, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::E)] = { .scancode = Scancode::E, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F)] = { .scancode = Scancode::F, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::G)] = { .scancode = Scancode::G, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::H)] = { .scancode = Scancode::H, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::I)] = { .scancode = Scancode::I, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::J)] = { .scancode = Scancode::J, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::K)] = { .scancode = Scancode::K, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::L)] = { .scancode = Scancode::L, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::M)] = { .scancode = Scancode::M, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::N)] = { .scancode = Scancode::N, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::O)] = { .scancode = Scancode::O, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::P)] = { .scancode = Scancode::P, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Q)] = { .scancode = Scancode::Q, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::R)] = { .scancode = Scancode::R, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::S)] = { .scancode = Scancode::S, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::T)] = { .scancode = Scancode::T, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::U)] = { .scancode = Scancode::U, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::V)] = { .scancode = Scancode::V, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::W)] = { .scancode = Scancode::W, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::X)] = { .scancode = Scancode::X, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Y)] = { .scancode = Scancode::Y, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Z)] = { .scancode = Scancode::Z, .modifier = MODIFIER_NONE },

  [static_cast<int>(Key::Num1)] = { .scancode = Scancode::Num1, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num2)] = { .scancode = Scancode::Num2, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num3)] = { .scancode = Scancode::Num3, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num4)] = { .scancode = Scancode::Num4, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num5)] = { .scancode = Scancode::Num5, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num6)] = { .scancode = Scancode::Num6, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num7)] = { .scancode = Scancode::Num7, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num8)] = { .scancode = Scancode::Num8, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num9)] = { .scancode = Scancode::Num9, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Num0)] = { .scancode = Scancode::Num0, .modifier = MODIFIER_NONE },

  [static_cast<int>(Key::Enter)] = { .scancode = Scancode::Enter, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Esc)] = { .scancode = Scancode::Esc, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::BSpace)] = { .scancode = Scancode::BSpace, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Tab)] = { .scancode = Scancode::Tab, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Space)] = { .scancode = Scancode::Space, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Minus)] = { .scancode = Scancode::Minus, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Equal)] = { .scancode = Scancode::Equal, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::LBrace)] = { .scancode = Scancode::LBrace, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::RBrace)] = { .scancode = Scancode::RBrace, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::BSlash)] = { .scancode = Scancode::BSlash, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Tilde)] = { .scancode = Scancode::Tilde, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Semicolon)] = { .scancode = Scancode::Semicolon, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::SQuote)] = { .scancode = Scancode::SQuote, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Grave)] = { .scancode = Scancode::Grave, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Comma)] = { .scancode = Scancode::Comma, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Period)] = { .scancode = Scancode::Period, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Slash)] = { .scancode = Scancode::Slash, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Percent)] = { .scancode = Scancode::Num5, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::At)] = { .scancode = Scancode::Num2, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::LBrack)] = { .scancode = Scancode::LBrace, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::RBrack)] = { .scancode = Scancode::RBrace, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Carrot)] = { .scancode = Scancode::Num6, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Pound)] = { .scancode = Scancode::Num3, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Dollar)] = { .scancode = Scancode::Num4, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::LParen)] = { .scancode = Scancode::Num9, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::RParen)] = { .scancode = Scancode::Num0, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Asterisk)] = { .scancode = Scancode::Num8, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Bang)] = { .scancode = Scancode::Num1, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Plus)] = { .scancode = Scancode::Equal, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Underscore)] = { .scancode = Scancode::Minus, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Ampersand)] = { .scancode = Scancode::Num7, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Pipe)] = { .scancode = Scancode::BSlash, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Question)] = { .scancode = Scancode::Slash, .modifier = MODIFIER_SHIFT },

  [static_cast<int>(Key::F1)] = { .scancode = Scancode::F1, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F2)] = { .scancode = Scancode::F2, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F3)] = { .scancode = Scancode::F3, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F4)] = { .scancode = Scancode::F4, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F5)] = { .scancode = Scancode::F5, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F6)] = { .scancode = Scancode::F6, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F7)] = { .scancode = Scancode::F7, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F8)] = { .scancode = Scancode::F8, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F9)] = { .scancode = Scancode::F9, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F10)] = { .scancode = Scancode::F10, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F11)] = { .scancode = Scancode::F11, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::F12)] = { .scancode = Scancode::F12, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::PrintScr)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::ScrollLock)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Pause)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Home)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::PgUp)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Del)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::End)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::PgDn)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Right)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Left)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Down)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },
  [static_cast<int>(Key::Up)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE },

  [static_cast<int>(Key::Ctrl)] = { .scancode = Scancode::None, .modifier = MODIFIER_CTRL },
  [static_cast<int>(Key::Shift)] = { .scancode = Scancode::None, .modifier = MODIFIER_SHIFT },
  [static_cast<int>(Key::Alt)] = { .scancode = Scancode::None, .modifier = MODIFIER_ALT },

  [static_cast<int>(Key::None)] = { .scancode = Scancode::None, .modifier = MODIFIER_NONE }
};

enum class Layer {
  Base,
  Sym,
  Count
};

class Keymap {
  public:
    Keymap(void);
    void update(
      const Matrix::report *mr,
      struct scancode_report *sr
    );

  private:
    Layer activeLayer;

    bool shiftStuck : 1;
    bool altStuck : 1;
    bool ctrlStuck : 1;
    bool layerSymStuck : 1;
};

struct scancode_report {
  uint16_t scancodes[6];
  uint8_t modifiers;
};


#endif
