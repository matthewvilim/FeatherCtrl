#ifndef KEYMAP_H
#define KEYMAP_H

#include <stdint.h>

#include "Matrix.h"


enum class Key {
  LayerSym,

  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
  Z,

  Num1,
  Num2,
  Num3,
  Num4,
  Num5,
  Num6,
  Num7,
  Num8,
  Num9,
  Num0,

  Enter,
  Esc,
  BSpace,
  Tab,
  Space,
  Minus,
  Equal,
  LBrace,
  RBrace,
  BSlash,
  Tilde,
  Semicolon,
  SQuote,
  Grave,
  Comma,
  Period,
  Slash,
  Percent,
  At,
  LBrack,
  RBrack,
  Carrot,
  Pound,
  Dollar,
  LParen,
  RParen,
  Asterisk,
  Bang,
  Plus,
  Underscore,
  Ampersand,
  Pipe,
  Question,

  F1,
  F2,
  F3,
  F4,
  F5,
  F6,
  F7,
  F8,
  F9,
  F10,
  F11,
  F12,
  PrintScr,
  ScrollLock,
  Pause,
  Home,
  PgUp,
  Del,
  End,
  PgDn,
  Right,
  Left,
  Down,
  Up,

  Ctrl,
  Shift,
  Alt,

  None
};

enum class Scancode {
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
  Z,

  Num1,
  Num2,
  Num3,
  Num4,
  Num5,
  Num6,
  Num7,
  Num8,
  Num9,
  Num0,

  Enter,
  Esc,
  BSpace,
  Tab,
  Space,
  Minus,
  Equal,
  LBrace,
  RBrace,
  BSlash,
  Tilde,
  Semicolon,
  SQuote,
  Grave,
  Comma,
  Period,
  Slash,

  F1,
  F2,
  F3,
  F4,
  F5,
  F6,
  F7,
  F8,
  F9,
  F10,
  F11,
  F12,
  Home,
  PgUp,
  Del,
  End,
  PgDn,
  Right,
  Left,
  Down,
  Up,

  Count,
  None
};

const uint8_t scancodes[] = {
  [Scancode::A] = 0x4,
  [Scancode::B] = 0x5,
  [Scancode::C] = 0x6,
  [Scancode::D] = 0x7,
  [Scancode::E] = 0x8,
  [Scancode::F] = 0x9,
  [Scancode::G] = 0xa,
  [Scancode::H] = 0xb,
  [Scancode::I] = 0xc,
  [Scancode::J] = 0xd,
  [Scancode::K] = 0xe,
  [Scancode::L] = 0xf,
  [Scancode::M] = 0x10,
  [Scancode::N] = 0x11,
  [Scancode::O] = 0x12,
  [Scancode::P] = 0x13,
  [Scancode::Q] = 0x14,
  [Scancode::R] = 0x15,
  [Scancode::S] = 0x16,
  [Scancode::T] = 0x17,
  [Scancode::U] = 0x18,
  [Scancode::V] = 0x19,
  [Scancode::W] = 0x1a,
  [Scancode::X] = 0x1b,
  [Scancode::Y] = 0x1c,
  [Scancode::Z] = 0x1d,

  [Scancode::Num1] = 0x1e,
  [Scancode::Num2] = 0x1f,
  [Scancode::Num3] = 0x20,
  [Scancode::Num4] = 0x21,
  [Scancode::Num5] = 0x22,
  [Scancode::Num6] = 0x23,
  [Scancode::Num7] = 0x24,
  [Scancode::Num8] = 0x25,
  [Scancode::Num9] = 0x26,
  [Scancode::Num0] = 0x27,

  [Scancode::Enter] = 0x28,
  [Scancode::Esc] = 0x29,
  [Scancode::BSpace] = 0x2a,
  [Scancode::Tab] = 0x2b,
  [Scancode::Space] = 0x2c,
  [Scancode::Minus] = 0x2d,
  [Scancode::Equal] = 0x2e,
  [Scancode::LBrace] = 0x2f,
  [Scancode::RBrace] = 0x30,
  [Scancode::BSlash] = 0x31,
  [Scancode::Tilde] = 0x32,
  [Scancode::Semicolon] = 0x33,
  [Scancode::SQuote] = 0x34,
  [Scancode::Grave] = 0x35,
  [Scancode::Comma] = 0x36,
  [Scancode::Period] = 0x37,
  [Scancode::Slash] = 0x38,

  [Scancode::F1] = 0x3a,
  [Scancode::F2] = 0x3b,
  [Scancode::F3] = 0x3c,
  [Scancode::F4] = 0x3d,
  [Scancode::F5] = 0x3e,
  [Scancode::F6] = 0x3f,
  [Scancode::F7] = 0x40,
  [Scancode::F8] = 0x41,
  [Scancode::F9] = 0x42,
  [Scancode::F10] = 0x43,
  [Scancode::F11] = 0x44,
  [Scancode::F12] = 0x45,
  [Scancode::Home] = 0x4a,
  [Scancode::PgUp] = 0x4b,
  [Scancode::Del] = 0x4c,
  [Scancode::End] = 0x4d,
  [Scancode::PgDn] = 0x4e,
  [Scancode::PgUp] = 0x4f,
  [Scancode::Left] = 0x50,
  [Scancode::Down] = 0x51,
  [Scancode::Up] = 0x52
};

enum modifier {
  MODIFIER_CTRL,
  MODIFIER_SHIFT,
  MODIFIER_ALT,

  MODIFIER_COUNT,
  MODIFIER_NONE
};

const uint8_t modifiers[] = {
  [MODIFIER_CTRL] = 1 << 0,
  [MODIFIER_SHIFT] = 1 << 1,
  [MODIFIER_ALT] = 1 << 2
};

struct key_scancode {
  enum scancode scancode : 7;
  enum modifier modifier : 2;
};

const struct key_scancode key_scancode_map = {
  [KEYMAP_KEY_LAYER_SYM] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },

  [KEYMAP_KEY_A] = { .scancode = SCANCODE_A, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_B] = { .scancode = SCANCODE_B, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_C] = { .scancode = SCANCODE_C, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_D] = { .scancode = SCANCODE_D, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_E] = { .scancode = SCANCODE_E, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F] = { .scancode = SCANCODE_F, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_G] = { .scancode = SCANCODE_G, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_H] = { .scancode = SCANCODE_H, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_I] = { .scancode = SCANCODE_I, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_J] = { .scancode = SCANCODE_J, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_K] = { .scancode = SCANCODE_K, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_L] = { .scancode = SCANCODE_L, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_M] = { .scancode = SCANCODE_M, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_N] = { .scancode = SCANCODE_N, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_O] = { .scancode = SCANCODE_O, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_P] = { .scancode = SCANCODE_P, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_Q] = { .scancode = SCANCODE_Q, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_R] = { .scancode = SCANCODE_R, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_S] = { .scancode = SCANCODE_S, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_T] = { .scancode = SCANCODE_T, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_U] = { .scancode = SCANCODE_U, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_V] = { .scancode = SCANCODE_V, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_W] = { .scancode = SCANCODE_W, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_X] = { .scancode = SCANCODE_X, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_Y] = { .scancode = SCANCODE_Y, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_Z] = { .scancode = SCANCODE_Z, .modifier = MODIFIER_NONE },

  [KEYMAP_KEY_1] = { .scancode = SCANCODE_1, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_2] = { .scancode = SCANCODE_2, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_3] = { .scancode = SCANCODE_3, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_4] = { .scancode = SCANCODE_4, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_5] = { .scancode = SCANCODE_5, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_6] = { .scancode = SCANCODE_6, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_7] = { .scancode = SCANCODE_7, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_8] = { .scancode = SCANCODE_8, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_9] = { .scancode = SCANCODE_9, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_0] = { .scancode = SCANCODE_0, .modifier = MODIFIER_NONE },

  [KEYMAP_KEY_ENTER] = { .scancode = SCANCODE_ENTER, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_ESC] = { .scancode = SCANCODE_ESC, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_BSPACE] = { .scancode = SCANCODE_BSPACE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_TAB] = { .scancode = SCANCODE_TAB, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_SPACE] = { .scancode = SCANCODE_SPACE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_MINUS] = { .scancode = SCANCODE_MINUS, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_EQUAL] = { .scancode = SCANCODE_EQUAL, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_LBRACE] = { .scancode = SCANCODE_LBRACE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_RBRACE] = { .scancode = SCANCODE_RBRACE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_BSLASH] = { .scancode = SCANCODE_BSLASH, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_TILDE] = { .scancode = SCANCODE_TILDE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_SEMICOLON] = { .scancode = SCANCODE_SEMICOLON, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_SQUOTE] = { .scancode = SCANCODE_SQUOTE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_GRAVE] = { .scancode = SCANCODE_GRAVE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_COMMA] = { .scancode = SCANCODE_COMMA, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_PERIOD] = { .scancode = SCANCODE_PERIOD, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_SLASH] = { .scancode = SCANCODE_SLASH, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_PERCENT] = { .scancode = SCANCODE_5, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_AT] = { .scancode = SCANCODE_2, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_LBRACK] = { .scancode = SCANCODE_LBRACE, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_RBRACK] = { .scancode = SCANCODE_RBRACE, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_CARROT] = { .scancode = SCANCODE_6, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_POUND] = { .scancode = SCANCODE_3, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_DOLLAR] = { .scancode = SCANCODE_4, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_LPAREN] = { .scancode = SCANCODE_9, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_RPAREN] = { .scancode = SCANCODE_0, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_ASTERISK] = { .scancode = SCANCODE_8, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_BANG] = { .scancode = SCANCODE_1, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_PLUS] = { .scancode = SCANCODE_EQUAL, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_UNDERSCORE] = { .scancode = SCANCODE_MINUS, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_AMPERSAND] = { .scancode = SCANCODE_7, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_PIPE] = { .scancode = SCANCODE_BSLASH, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_QUESTION] = { .scancode = SCANCODE_SLASH, .modifier = MODIFIER_SHIFT },

  [KEYMAP_KEY_F1] = { .scancode = SCANCODE_F1, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F2] = { .scancode = SCANCODE_F2, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F3] = { .scancode = SCANCODE_F3, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F4] = { .scancode = SCANCODE_F4, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F5] = { .scancode = SCANCODE_F5, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F6] = { .scancode = SCANCODE_F6, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F7] = { .scancode = SCANCODE_F7, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F8] = { .scancode = SCANCODE_F8, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F9] = { .scancode = SCANCODE_F9, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F10] = { .scancode = SCANCODE_F10, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F11] = { .scancode = SCANCODE_F11, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_F12] = { .scancode = SCANCODE_F12, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_PRINTSCR] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_SCROLLLOCK] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_PAUSE] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_HOME] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_PGUP] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_DEL] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_END] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_PGDN] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_RGHT] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_LEFT] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_DOWN] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },
  [KEYMAP_KEY_UP] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE },

  [KEYMAP_KEY_CTRL] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_CTRL },
  [KEYMAP_KEY_SHIFT] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_SHIFT },
  [KEYMAP_KEY_ALT] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_ALT },

  [KEYMAP_KEY_NONE] = { .scancode = SCANCODE_NONE, .modifier = MODIFIER_NONE }
};

class Keymap {
  public:
    Keymap(void);
    void update(
      const Matrix::report *mr,
      struct scancode_report *sr
    );

  private:
    enum class Layer {
      Base,
      Sym,
      Count
    };

    Layer activeLayer;

    bool shiftStuck : 1;
    bool altStuck : 1;
    bool ctrlStuck : 1;
    bool layerSymStuck : 1;
};

struct scancode_report {
  uint16_t scancodes[6];
  uint8_t modifiers;
};


#endif
